@import "./variables";

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Calculates the distance between the sun and a planet
@function calculateDistance($distance) {
  $AU: 149.6; // 149.6 million km is 1 AU (astronomical unit)
  @return ($distance / $AU);
}

@mixin heightWidth($diameter) {
  $sizeInEm: diameterToEm($diameter);
  height: #{$sizeInEm};
  width: #{$sizeInEm};
}

@mixin backgroundImg($image) {
  background: url($image);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  border: none;
  border-radius: 100%;
}

@mixin planetStyle($diameter, $distance, $img) {
  $sizeInEm: diameterToEm($diameter);
  @include heightWidth($sizeInEm); // Convert size to rem units
  @include backgroundImg($img);
  margin-block-end: calc(#{$distance / 149.6} * 1rem);
  transform: translateY(-50%);

  // Use the $solarSystemSizes map to set the size of the planet
  $celestialBody: map-get($solarSystemSizes, $img);
  $planetSize: diameterToEm($celestialBody);
  width: $planetSize * 15; // Multiply by 15
  height: $planetSize * 15; // Multiply by 15
}

@mixin nameTag() {
  display: flex;
  justify-content: center;
  width: 100%;
  color: white;
  // font-size: calc(10rem * 10);
  font-size: 10em;
  z-index: 10; // Change z-index to 10, so the name tags are visible
  top: -100rem;
}

@function diameterToEm($celestialBody) {
  // Standard size
  $oneEm: map-get($solarSystemSizes, "earth");

  // Calculate size relative to earth in em
  @return (strip-unit($celestialBody) / strip-unit($oneEm)) * 1em;
}

@mixin container() {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
